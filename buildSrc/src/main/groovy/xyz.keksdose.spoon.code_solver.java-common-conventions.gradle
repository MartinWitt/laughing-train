plugins {
    // Apply the java Plugin to add support for Java.
    id 'java'
    id "com.diffplug.spotless"
		id 'org.kordamp.gradle.jandex'
		id "net.ltgt.errorprone"
}

repositories {
    mavenCentral()
}
dependencies {
		// Use JUnit Jupiter for testing.
	testImplementation 'org.junit.jupiter:junit-jupiter:5.9.3'
	implementation 'com.google.guava:guava:31.1-jre'
	implementation 'fr.inria.gforge.spoon:spoon-core:+'
	implementation 'com.google.flogger:flogger:0.7.4'
	implementation 'com.google.flogger:flogger-system-backend:0.7.4'
	implementation group: 'ch.qos.logback', name: 'logback-core', version: '1.4.7'
	errorprone("com.google.errorprone:error_prone_core:2.19.1")
	testImplementation group: 'org.assertj', name: 'assertj-core', version: '3.24.2'
	annotationProcessor "com.uber.nullaway:nullaway:+"
	testImplementation "org.instancio:instancio-junit:2.15.0"
}
testing {
    suites {
        // Configure the built-in test suite
        test {
            // Use JUnit Jupiter test framework
            useJUnitJupiter('5.8.1')
        }
    }
}


spotless {
	format 'misc', {
		// define the files to apply `misc` to
		target "*.md", '.gitignore'
		trimTrailingWhitespace()
		indentWithTabs()
		endWithNewline()
	}

	groovyGradle {
		target '*.gradle' // default target of groovyGradle
	}
	java {
        palantirJavaFormat()
	}
}

tasks.withType(JavaCompile).configureEach {
	  options.errorprone.disableAllChecks = true
    options.errorprone.disableWarningsInGeneratedCode = true
		options.errorprone.enabled = true
    options.errorprone.allDisabledChecksAsWarnings = false // change it to true to enable
		options.errorprone.enable("Var")
		  if (!name.toLowerCase().contains("test")) {
    		options.errorprone {
      		check("NullAway")
					option("NullAway:AnnotatedPackages", "io.github.martinwitt.laughing_train")
    }
  }
}
compileJava {
	options.encoding = 'UTF-8'
	options.compilerArgs << '-parameters'	
	options.compilerArgs += ["--enable-preview"]
}
java {
	toolchain {
		languageVersion.set(JavaLanguageVersion.of(17))
	}
}
test {
    testLogging {
        exceptionFormat = 'full'
    }
}
compileTestJava {
	options.encoding = 'UTF-8'
	dependsOn("jandex")
}
jar {
		dependsOn("jandex")
}
group 'io.github.martinwitt'
// x-release-please-start-version
version '0.0.5'
// x-release-please-end